name: Deploy to ECS

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Build and deploy api-service in ECS

    steps:

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

# OIDC conection
#    - name: Configure AWS credentials using OIDC
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        role-to-assume: arn:aws:iam::123456789012:role/your-oidc-role
#        aws-region: us-west-1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: api  # Change this to your ECR repository name
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f api/Dockerfile .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Update ECS service with new image
      env:
        AWS_REGION: us-west-1  # Change this to your AWS region if needed
        CLUSTER_NAME: my-ecs-cluster
        SERVICE_NAME: my-ecs-service
        CONTAINER_NAME: api-container  # Change this to your container name in the task definition
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: api  # Change this to your ECR repository name
        IMAGE_TAG: ${{ github.sha }}
      run: |
        aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment \
          --region $AWS_REGION \
          --output json
